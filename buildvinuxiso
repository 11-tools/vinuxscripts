#!/bin/bash
#
# This script will build a remaster of the installed system, it
# should run after the buildvinux script. To run it type:
# 'sudo buildvinuxiso'. It will remove some applications so 
# that the ISO will fit on a CD, and it make some other changes
# to the system.
#
# Stage 0 - Declare text colour/system bell functions

function black {
    tput setf 0   
}

function green {
    tput setf 2    
}

function blue {
    tput setf 3
}

function red {
    tput setf 4    
}

function white {
    tput setf 7
}

function reset {
    tput reset
}

function bell {
    echo -en "\007"    
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 1 - Specify Release Version

echo
bell
red
echo -n "Enter the release number, for example 3.0-Beta-1.0: "; read RELEASE
green
echo

RELEASE_SPACES=`echo $RELEASE | sed 's/-/ /g'`

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 2 - Remove Applications

echo
bell
red
echo -n "Do you want to remove packages to fit the iso onto a CD? [y/n]: "
read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then  

echo
blue
echo "Removing applications to make room on the CD"
green
echo

sudo apt-get purge -qq -y gnome-games-common gbrainy evolution-common evolution-data-server f-spot ttf-unfonts-core ttf-thai-tlwg ttf-takao-pgothic ttf-wqy-microhei ttf-indic-fonts-core ttf-punjabi-fonts ttf-lao ttf-khmeros-core ttf-kacst-one example-content festival samba-common samba-common-bin smbclient ure festlex-cmu festlex-poslex festvox-kallpc16k libflite1 git-core openssh-server gwibber

# Remove previous kernel if one exists
sudo apt-get purge -q -y linux-image-2.6* | grep -v $(uname -r)

sudo apt-get autoremove -y -qq

# Add EasyInstall to /etc/skel
sudo rsync -r /usr/share/vinux/EasyInstall_skel/ /etc/skel
chmod -R a+r /etc/skel

#Enable grub beep
sudo sed -i '/^#GRUB_INIT_TUNE=/s/^#//' /etc/default/grub

#clean up root dir
sudo rm -f /root/.bash_history
sudo rm -f /root/.nano_history
sudo rm -rf /root/.ssh
sudo rm -rf /root/.wajig

echo branding Vinux console
sudo echo "Vinux $RELEASE_SPACES \n \l" > /etc/issue

# Make grub read lsb-release description line instead of The ID
sudo sed -Ei 's;(lsb_release[ ]*)-i([ ]);\1-d\2;g' /etc/default/grub

# Change lsb-release description to our build version
sudo sed -i "s/^DISTRIB_DESCRIPTION=.*/DISTRIB_DESCRIPTION=\"Vinux $RELEASE_SPACES\"/" /etc/lsb-release

# Update grub so our menu name changes
sudo update-grub
fi


# Stage 3 - Configure Remastersys

echo
blue
echo "Configuring remastersys..."
green
echo

# Next run remastersys and change the username to 'vinux' and the name of the
# CD and ISO file to 'Vinux-'version'
sudo sed -i "s/LIVEUSER=.*/LIVEUSER=\"vinux\"/
        s/LIVECDLABEL=.*/LIVECDLABEL=\"Vinux $RELEASE_SPACES\"/
        s/CUSTOMISO=.*/CUSTOMISO=\"Vinux-$RELEASE.iso\"/" /etc/remastersys.conf

# Set timeout and accessibility mode
sudo sed -i 's/^timeout.*/timeout 100/
    s/^prompt.*/prompt 0\nnoescape 1/
    s/ access=v3//
    s/boot=casper/boot=casper access=v3/' /etc/remastersys/isolinux/isolinux.cfg.vesamenu

# Change boot background

cp -f /usr/share/vinux/images/splash.png /etc/remastersys/isolinux/splash.png

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 4 - Build Iso

# Run remastersys in 'dist' mode from the Menu Launcher or the terminal. The
# iso should be in /home/remastersys in about 15-20 minutes.

echo
blue
echo "Building ISO..."
green
echo
sudo remastersys dist
