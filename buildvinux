#!/bin/bash
#
# This script should only be run after completing the following steps:
#
# 1. Download LMDE gnome latest iso, it's rollin g release so # can be an older edition. 
# 2. Install to hard drive then run these scripts.
 before running make install.
# 3. Type in the vinuxscripts directory, sudo make install.
# 4. Type './buildvinux' as root to run the script, when it is finished reboot and
# your system should be identical to VMDE. If you 
# want a log of the build process? run the 'script' command first and 'exit'
# when finished - the log will be in a file called 'typescript'.. 
# 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

# Stage 0 - Declare text colour/system bell functions

function black { tput setf 0; }
function green { tput setf 2; }
function blue { tput setf 3; }
function red { tput setf 4;
}   
function white { tput setf 7; }
function reset { tput reset; }
function bell { echo -en "\007"; }   

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 1 - Configuring Repositories

# Update /etc/apt/sources.list
# This installs Vinux, and Remastersys repos.

echo
blue
echo "Updating software repositories... and importing keys..."
green
set_vinux_sources

# Import the Vinux/Ubuntu Team repository key.

echo
blue
echo "Importing repository keys..."
green
echo

gpg -q --keyserver keys.gnupg.net --recv-keys EF2AFDCF ; gpg --export EF2AFDCF | apt-key add -

# Import the Ubuntu extras key

gpg -q --keyserver keys.gnupg.net --recv-keys  16126D3A3E5C1192 ; gpg --export  16126D3A3E5C1192 | apt-key add -

# May as well update package list

apt-get update -qq

 # # # # # # # # #

# Stage 2 - Install Default Packages

# Update to the latest packages.

echo
blue
echo "Updating package list..."
green
echo

echo
blue
echo "Upgrading all packages... This can take some time."
green
echo

apt-get upgrade -y --force-yes -qq -f

# Install the default packages

echo
blue
echo "Installing default packages..."
green
echo
apt-get install -f -y --force-yes -qq --allow-unauthenticated gnome-orca gnome-terminal gparted compizconfig-settings-manager acpi vlock irssi lfm aptitude lynx-cur pdmenu sysv-rc-conf testdisk pcmanfm alpine nautilus-open-terminal nautilus-gksu nautilus-image-converter gedit-plugins gnome-themes gnome-themes-extras icedove soundConverter startupmanager pybackpack gespeaker remastersys speakup-tools aptoncd isomaster gtk-recordmydesktop gnome-color-chooser pidgin pidgin-data pidgin-facebookchat pidgin-hotkeys pidgin-libnotify pidgin-microblog pidgin-plugin-pack pidgin-skype gtkhash gworldclock mhwaveedit autokey-gtk gtk-chtheme fslint parcellite alarm-clock dlume gnome-schedule hardinfo searchmonkey partimage ntp surfraw wajig wordgrinder alsa-oss python-gnomeapplet git-core pastebinit sox gpm screen splitvt toilet txt2html html2text pdf2svg pstotext units mc dict gnome-dictionary sc htop linuxinfo w3m elinks-lite urlview finch axel calcurse tdl extlinux transmission-gtk ceni geditpdf monitor-toggle sonic talking-clock ttytter orca-teacher emacspeak speech-dispatcher make totem network-manager-wicd gnome-backgrounds mousetweaks gnome-accessibility-themes software-center synaptic gnome-system-monitor preload epiphany-browser sudo gdm3 espeakup thunderbird wodim python-at-spi resolvconf moreutils

# Fix missing simlink for resolv.conf
ln /etc/resolvconf/resolv.conf.d/original /etc/resolv.conf

# fix missing symbolic link for libuuid - liveramfs-tools
ln -s -f libuuid.so.1.3.0  libuuid.so.1


# Enable parallel starts
echo 'CONCURRENCY=shell' >> /etc/default/rcS

# Install x-tile from giuspen.com

echo
blue
echo "installing x-tile..."
green
echo

wget -c -q http://www.giuspen.com/software/x-tile_1.9-1_all.deb
dpkg -i x-tile_1.9-1_all.deb

# Fix bug - espeak gives error: bt_audio_service_open: connect() failed: 

echo
blue
echo "Removing bluez-alsa..."
green
echo

apt-get purge -y -qq bluez-alsa

# Set up irssi global configuration and soundpack

cp vinux_data/irssi/irssi.conf /etc/irssi.conf

# Installing Vinux Manual

update_manual

# Clean up any packages we don't need

echo
blue
echo "Removing unnecessary packages..."
green
echo

apt-get -y -qq autoremove 

# Switch off automatic updates notification message

#sed -i 's/APT::Periodic::Update-Package-Lists "1";/APT::Periodic::Update-Package-Lists "0";/' /etc/apt/apt.conf.d/10periodic

# Open emacspeak in customizable mode

sed -i 's/exec emacs -q -l/exec emacs -l/' /usr/bin/emacspeak

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 3 - Install/Remove Optional Packages

# Install all of the DVD Packages

echo
bell
red
echo -n "Do you want to install all of the extra DVD packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then   

echo
blue
echo "Installing DVD packages..."
green
echo

apt-get purge -y -qq openoffice.org-common

apt-get install -y -qq --force-yes ocrodjvu ocropus gambas2 uck screenlets gdesklets chromium-browser gimp inkscape scribus openclipart-png transmageddon cheese audacity jokosher gtkpod libreoffice libreoffice-gnome evolution evolution-exchange ooo-thumbnailer bleachbit clamtk nautilus-clamscan spamassassin qemu-launcher virtualbox-ose extremetuxracer supertux tuxmath tuxpaint tuxpuck tuxtype supertuxkart pingus accerciser python-dogtail audacious paman paprefs padevchooser abiword gnumeric automake intltool gnome-common exactimage tuxguitar solfege gperiodic thoggen speedy-ocr pandoc markup-binder ttf-aenigma gwrite devede bum photoprint icc-profiles  
fi

# Install some 3D Games - not accessible with screen readers

echo
bell
red
echo -n "Do you want to install the 3D games packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then 

echo
blue 
echo "Installing games packages..."
green
echo

apt-get install -y -qq --force-yes assaultcube wesnoth brutalchess foobillard glest neverball neverputt oolite pokerth smc smc-music stormbaancoureur torcs trigger warzone2100 celestia-gnome
fi

# Install non-free packages - non-distributable

echo
bell
red
echo -n "Do you want to install all of the non-free packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then  

echo
blue
echo "Installing non-free packages..."
green
echo

apt-get install -y -qq --force-yes libdvdcss2 w32codecs
fi

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 4 - Configure Desktop and Keybindings

# Run the set_vinux_globals script

echo
blue
echo "Configuring desktop and keybindings..."
green
echo

set_vinux_globals

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 5 - Configure Speech

# Run the restorespeech script

echo
blue
echo "Configuring speech..."
green
echo

configurespeech

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

echo
bell
red

echo "You are done, Press any key to restart your system..."
 read
reset
#shutdown -r now



