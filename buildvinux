#!/bin/bash
#
# This script should only be run after completing the following steps:
#
# 1. Download the latest Ubuntu Maverick iso and burn it to CD.
#
# 2. Boot from the CD, Press Space, Enter, F5, select 'screen-reader' and 
#    Enter again twice boot the live CD.
#
# 3. Run the Ubuntu Installer, install the system to hard drive then reboot.
#
# Type 'sudo buildvinux' to run the script, then 'volume_keys' when it is 
# finished reboot and your system should be identical to the Vinux/Lucid 
# distribution. See the buildvinux.log file to read the output of all other 
# commands run.  

LOGFILE="buildvinux.log"
INSTALL_VINUX_DESKTOP=""
INSTALL_VINUX_KEYBINDINGS=""
INSTALL_VINUX_DVD=""
ZIPCODE=""
while [ $# -gt 0 ]; do
    if [ $1 = "-l" ]; then
        shift
        if [ $# -lt 1 ]; then
    	    echo "Expecting log file name"
    	    exit 1
        fi
        LOGFILE=$1
    elif [ $1 = "-z" ]; then
        shift
        if [ $# -lt 1 ]; then
    	    echo "Expecting zipcode"
    	    exit 1
        fi
        ZIPCODE=$1
    elif [ $1 = "-d" ]; then
	INSTALL_VINUX_DESKTOP="yes"
    elif [ $1 = "-D" ]; then
	INSTALL_VINUX_DESKTOP="no"
    elif [ $1 = "-k" ]; then
	INSTALL_VINUX_DESKTOP="yes"
    elif [ $1 = "-k" ]; then
	INSTALL_VINUX_DESKTOP="no"
    else
        echo "Unknown option $1"
        echo "Usage: restore_vinux_environment [-d|-D] [-k|-K] [-l logFile] [-z zipcode]"
	echo "    -D  : Don't modify the Ubuntu desktop panels and background"
	echo "    -d  : Modify the Ubuntu desktop panels and background to like Vinux"
	echo "    -K  : Don't add any Vinux keybindings, except restart Orca will be bound to"
	echo "          Control+Alt+o"
	echo "    -k  : Add all Vinux keybindings. Restart Orca will be bound to"
	echo "          Shift+Control+o"
        exit 1
    fi
    shift
done

# Ask this first, so the user doesn't have to wait around listening carefully.
if [ "$ZIPCODE" = "" ]; then
    echo "Please enter your zipcode for Stormdragon's weather reporting using Orca+w"
    read ZIPCODE
fi
if [ "$INSTALL_VINUX_DESKTOP" = "" ]; then
    echo "Do you want to install Vinux destop panels and background image? [Y/n]"
    read ANSWER
    startsWithN=`echo $ANSWER | egrep -i '^[ \t]*n'`
    if [ "$startsWithN" != "" ]; then
	INSTALL_VINUX_DESKTOP="no"
    else
	INSTALL_VINUX_DESKTOP="yes"
    fi
fi

if [ "$INSTALL_VINUX_KEYBINDINGS" = "" ]; then
    echo "Do you want to install Vinux keybindings? [Y/n]"
    read ANSWER
    startsWithN=`echo $ANSWER | egrep -i '^[ \t]*n'`
    if [ "$startsWithN" != "" ]; then
	INSTALL_VINUX_KEYBINDINGS="no"
    else
	INSTALL_VINUX_KEYBINDINGS="yes"
    fi
fi

if [ "$INSTALL_VINUX_DVD" = "" ]; then
    echo "Do you want to install all of the extra DVD packages? [Y/n]"
    read ANSWER
    startsWithN=`echo $ANSWER | egrep -i '^[ \t]*n'`
    if [ "$startsWithN" != "" ]; then
	INSTALL_VINUX_DVD="no"
    else
	INSTALL_VINUX_DVD="yes"
    fi
fi

if [ "$INSTALL_VINUX_GAMES" = "" ]; then
    echo "Do you want to install the extra 3D games packages? [Y/n]"
    read ANSWER
    startsWithN=`echo $ANSWER | egrep -i '^[ \t]*n'`
    if [ "$startsWithN" != "" ]; then
	INSTALL_VINUX_GAMES="no"
    else
	INSTALL_VINUX_GAMES="yes"
    fi
fi

if [ "$INSTALL_VINUX_CODECS" = "" ]; then
    echo "Do you want to install non-free codecs and packages? [Y/n]"
    read ANSWER
    startsWithN=`echo $ANSWER | egrep -i '^[ \t]*n'`
    if [ "$startsWithN" != "" ]; then
	INSTALL_VINUX_CODECS="no"
    else
	INSTALL_VINUX_CODECS="yes"
    fi
fi

# Update /etc/apt/sources.list
echo "Updating software repositories..."
sudo apt-add-repository ppa:mangler/mangler
egrep -v 'vinux' /etc/apt/sources.list > /tmp/vinux.tmp
echo '# Repositories supporting vinux packages.
# If you are willing to help test new Vinux packages, uncomment the following:
#deb http://ppa.launchpad.net/vinux/vinux-lucid-testing/ubuntu lucid main
#deb-src http://ppa.launchpad.net/vinux/vinux-lucid-testing/ubuntu lucid main
#deb http://ppa.launchpad.net/vinux/maverick-testing/ubuntu maverick main
#deb-src http://ppa.launchpad.net/vinux/maverick-testing/ubuntu maverick main
deb http://www.geekconnection.org/remastersys/repository karmic/
deb http://ppa.launchpad.net/vinux/vinux-lucid/ubuntu lucid main
deb-src http://ppa.launchpad.net/vinux/vinux-lucid/ubuntu lucid main
deb http://ppa.launchpad.net/vinux/maverick/ubuntu maverick main
deb-src http://ppa.launchpad.net/vinux/maverick/ubuntu maverick main' >> /tmp/vinux.tmp
sed -i 's/^# *deb\(.*\) partner *$/deb\1 partner/
    s/^# *deb\(.*\)backports\(.*\)$/deb\1backports\2/' /tmp/vinux.tmp
sudo mv /tmp/vinux.tmp /etc/apt/sources.list

# Pin the priority of Vinux packages as higher than Ubuntu, so they don't get
# updated until we say so.
echo 'Package: *
Pin: release o=LP-PPA-vinux-maverick
Pin-Priority: 750' > /tmp/vinux-maverick-pin-750
sudo mv /tmp/vinux-maverick-pin-750 /etc/apt/preferences.d

echo "Importing repository keys"
# Import the Vinux/Ubuntu Team repository key.
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EF2AFDCF > $LOGFILE
# Import the Extras key
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 16126D3A3E5C1192 >> $LOGFILE
echo "Updating package list"
sudo apt-get update >> $LOGFILE

# Add medibuntu repository - uncommented it since it seems to be up again
sudo wget --output-document=/etc/apt/sources.list.d/medibuntu.list http://www.medibuntu.org/sources.list.d/$(lsb_release -cs).list && sudo apt-get --quiet update && sudo apt-get --yes --quiet --allow-unauthenticated install medibuntu-keyring && sudo apt-get --quiet update >> $LOGFILE

sudo apt-get -y --force-yes install app-install-data-medibuntu apport-hooks-medibuntu >> $LOGFILE

# Update to the latest packages.
echo "Upgrading all packages... This can take a few minutes."
echo "See $LOGFILE for progress."
sudo apt-get upgrade -y >> $LOGFILE

# Install the default packages
sudo apt-get install -y --force-yes gnome-orca gparted compizconfig-settings-manager acpi ubiquity-frontend-gtk vlock irssi mc lynx-cur pdmenu sysv-rc-conf testdisk deborphan pcmanfm alpine nautilus-open-terminal nautilus-gksu nautilus-image-converter nautilus-script-audio-convert nautilus-wallpaper gedit-plugins  gnome-accessibility-themes-extras gnome-themes gnome-themes-extras gnome-themes-more thunderbird soundConverter ndisgtk startupmanager pybackpack gespeaker mangler remastersys speakup speechd-up speakup-tools bareftp gwget aptoncd isomaster giggle gtk-recordmydesktop gnome-color-chooser ceni cfh geditpdf monitor-toggle sonic ttytter pavucontrol conkeror gnome-specimen gcolor2 smuxi bluefish pidgin pidgin-data pidgin-facebookchat pidgin-hotkeys pidgin-libnotify pidgin-microblog pidgin-plugin-pack pidgin-skype gtkhash tuxcmd  gworldclock sound-juicer mhwaveedit autokey-gtk gtk-chtheme fslint parcellite alarm-clock dlume gtodo terminator gufw gnome-schedule hardinfo searchmonkey file-browser-applet vlc-nox vlc-plugin-pulse gnome-media-player partimage ntp >> $LOGFILE

# Install x-tile from repository
sudo wget http://www.giuspen.com/software/x-tile_1.8.3-1_all.deb
sudo dpkg -i x-tile_1.8.3-1_all.deb

# Fix bug where espeak gives error: bt_audio_service_open: connect() failed: Connection refused (111)
sudo apt-get purge -y bluez-alsa >> $LOGFILE

# Enable speech
sudo /usr/bin/restorespeech -l $LOGFILE

# Edit speechd.conf to enable ibmtts.
if [ -f ~/.speech-dispatcher/conf/speechd.conf ]; then
    sed -i 's/#AddModule "ibmtts"/#AddModule "ibmtts"/' ~/.speech-dispatcher/conf/speechd.conf
fi

# Set Vinux keybindings, menus, desktop, etc
options=" -l $LOGFILE -z $ZIPCODE"
if [ "$INSTALL_VINUX_DESKTOP" = "yes" ]; then
    options="$options -d"
fi
if [ "$INSTALL_VINUX_KEYBINDINGS" = "yes" ]; then
    options="$options -k"
fi

# Install all of the DVD Packages
if [ "$INSTALL_VINUX_DVD" = "yes" ]; then
sudo apt-get install -y --force-yes cuneiform ocropus gambas2 uck screenlets gdesklets google-gadgets-gtk prism-google-groups prism-google-mail chromium-browser prism-google-calendar prism-google-docs gimp inkscape scribus openclipart-png transmageddon cheese audacity jokosher gtkpod openoffice.org openoffice.org-gnome evolution evolution-exchange ooo-thumbnailer bleachbit clamtk gufw nautilus-clamscan spamassassin qemu-launcher virtualbox-ose wine playonlinux dosbox dosemu extremetuxracer supertux tuxmath tuxpaint tuxpuck tuxtype supertuxkart pingus accerciser python-dogtail audacious pavucontrol paman paprefs padevchooser dasher easystroke gnome-mousetrap gxneur gok abiword gnumeric sox automake intltool gnome-common exactimage tuxguitar twitux solfege gperiodic gtkdiskfree thoggen speedy-ocr pandoc markup-binder ttf-aenigma gwrite gshutdown devede >> $LOGFILE
fi

# Install some 3D Games - not accessible with screen-reader
if [ "$INSTALL_VINUX_GAMES" = "yes" ]; then
sudo apt-get install -y --force-yes assaultcube wesnoth brutalchess foobillard glest neverball neverputt oolite pokerth smc smc-music stormbaancoureur torcs trigger warzone2100 yofrankie celestia-gnome stellarium marble gnome-art bum fluxbox fluxconf fbdesk fbpager bbtime bbrun xfce4 xfce4* xaralx xaralx-examples photoprint icc-profiles >> $LOGFILE
fi

# Install non-free packages - non-distributable
if [ "$INSTALL_VINUX_CODECS" = "yes" ]; then
sudo apt-get install -y --force-yes ubuntu-restricted-extras libdvdcss2 non-free-codecs skype acroread acroread-fonts 
fi

sudo /usr/bin/set_vinux_globals $options

# Update our desktop to look like Vinux
if [ "$INSTALL_VINUX_DESKTOP" = "yes" ]; then
    cp -r /etc/skel/.gconf ~
    cp /etc/skel/.bash_aliases_vinux ~
fi
cp -r /etc/skel/.orca ~


# Clean up any packages we don't need
sudo apt-get -y autoremove >> $LOGFILE

echo "Done!  Reboot and enjoy your new Vinux-like environment."
echo "Please report bugs to vinux-development@googlegroups.com"

