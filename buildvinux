#!/bin/bash
#
# This script should only be run after completing the following steps:
#
# 1. Download the latest Ubuntu Lucid iso and burn it to CD.
#
# 2. Boot from the CD, Press Space, Enter, F5, select 'screen-reader' and 
# Enter again to boot the live CD.
#
# 3. Run the Ubuntu Installer, install the system to hard drive then reboot.
#
# Type 'sudo buildvinux' to run the script, when it is finished reboot and
# your system should be identical to the Vinux/Lucid distribution. If you 
# want a log of the build process run the 'script' command first and 'exit'
# when finished - the log will be in a file called 'typescript'.. 
# 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

# Stage 0 - Declare text colour/system bell functions

function black {
    tput setf 0   
}

function green {
    tput setf 2    
}

function blue {
    tput setf 3
}

function red {
    tput setf 4    
}

function white {
    tput setf 7
}

function reset {
    tput reset
}

function bell {
    echo -en "\007"    
}


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 1 - Configuring Repositories

echo
blue
echo "Adding personal package archives"
green
echo
sudo apt-add-repository ppa:vinux/vinux-lucid
sudo apt-add-repository ppa:vinux/vinux-lucid-testing

# Disable testing repository by default
sudo sed -ri '1 s/(^deb)/# \1/' /etc/apt/sources.list.d/vinux-vinux-lucid-testing-lucid.list

sudo add-apt-repository ppa:mozillateam/firefox-stable
sudo add-apt-repository ppa:mozillateam/thunderbird-stable
sudo add-apt-repository ppa:libreoffice/ppa
sudo add-apt-repository ppa:tualatrix/ppa

# Add medibuntu repository 

echo
blue
echo "Adding medibuntu repository..."
green
echo

sudo wget --output-document=/etc/apt/sources.list.d/medibuntu.list http://www.medibuntu.org/sources.list.d/$(lsb_release -cs).list && sudo apt-get -qq update && sudo apt-get -y -qq --allow-unauthenticated install medibuntu-keyring && sudo apt-get -qq update 

sudo apt-get -qq -y --force-yes install app-install-data-medibuntu apport-hooks-medibuntu 


echo -n "Do you want to remove OpenOffice? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then  

echo
blue
echo "Removing Open Office..."
green
echo

sudo apt-get purge -y -qq openoffice.org-common openoffice.org-style-human            
 
fi

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 2 - Install Default Packages and upgrade

echo
sudo apt-get update -qq

# Install the default packages

echo
blue
echo "Installing default packages..."
green
echo

# Define packages

system_tools='remastersys gparted acpi ubiquity-frontend-gtk aptitude testdisk deborphan partimage aptoncd startupmanager pybackpack gwget gtkhash cpufreqd computer-janitor computer-janitor-gtk wajig alsa-oss gufw ntp pastebinit software-center openssh-server cfh linux-image-generic linux-headers-generic'

screen_readers='gnome-orca speakup-tools speechd-up gespeaker dasher gok'

accessibility_tools='nautilus-gksu monitor-toggle orca-teacher'

themes='gnome-accessibility-themes-extras gnome-themes gnome-themes-extras'

chat='pidgin pidgin-data pidgin-facebookchat pidgin-hotkeys pidgin-libnotify pidgin-microblog pidgin-plugin-pack pidgin-skype irssi mangler'

graphics='compizconfig-settings-manager nautilus-wallpaper gnome-color-chooser gcolor2 nautilus-image-converter gtk-chtheme fslint'

cli='mc vlock lfm lynx-cur alpine ceni ttytter emacspeak'

sound='nautilus-script-audio-convert soundConverter      audiobook-converter pavucontrol sound-juicer mhwaveedit gtk-recordmydesktop isomaster alarm-clock'

convenient_tools='nautilus-open-terminal gedit-plugins geditpdf ubuntu-tweak terminator autokey-gtk'

common='pcmanfm thunderbird gworldclock parcellite dlume gnome-schedule hardinfo searchmonkey meld easystroke gnome-mousetrap gxneur surfraw wordgrinder ubufox'

sudo apt-get install -y -q --force-yes $system_tools $screen_readers $accessibility_tools $themes $chat $graphics $cli $sound $convenient_tools $common


sudo apt-get upgrade -y  -qq
# Pin the priority of Vinux packages as higher than Ubuntu, so they don't get
# updated until we say so.

echo
blue
echo "Pinning Vinux repositories..."
green
echo

sudo echo 'Package: *
Pin: release o=LP-PPA-vinux-vinux-lucid
Pin-Priority: 750' > /tmp/vinux-lucid-pin-750
sudo mv /tmp/vinux-lucid-pin-750 /etc/apt/preferences.d
sudo echo 'Package: *
Pin: release o=LP-PPA-vinux-vinux-lucid-testing
Pin-Priority: 760' > /etc/apt/preferences.d/vinux-lucid-testing-pin-760

echo
bell
red



# Install x-tile from repository

echo
blue
echo "installing x-tile..."
green
echo

sudo wget http://www.giuspen.com/software/x-tile_2.0-1_all.deb
sudo dpkg -i x-tile_2.0-1_all.deb

# installing sound theme manager
sudo dpkg -i system/gstmanager_1.1.1-0ubuntu1_all.deb

# Fix bug - espeak gives error: bt_audio_service_open: connect() failed: 

echo
blue
echo "Removing bluez-alsa..."
green
echo

sudo apt-get purge -qq -y bluez-alsa 

# Installing Vinux Manual

sudo update_manual


# Clean up any packages we don't need

echo
blue
echo "Removing unnecessary packages..."
green
echo

sudo apt-get autoremove -y -qq

# Switch off automatic updates notification message

sudo sed -i 's/APT::Periodic::Update-Package-Lists "1";/APT::Periodic::Update-Package-Lists "0";/' /etc/apt/apt.conf.d/10periodic

# Open emacspeak in customizable mode

sudo sed -i 's/exec emacs -q -l/exec emacs -l/' /usr/bin/emacspeak

# install our irssi configuration
sudo cp system/irssi.conf /etc/irssi.conf

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 3 - Install/Remove Optional Packages

# Install all of the DVD Packages

echo
bell
red
echo -n "Do you want to install all of the extra DVD packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then   

echo
blue
echo "Installing DVD packages..."
green
echo
sudo apt-get install -y --force-yes -q cuneiform ocropus screenlets gdesklets google-gadgets-gtk prism-google-groups prism-google-mail prism-google-calendar prism-google-docs gimp inkscape scribus openclipart-png transmageddon cheese audacity jokosher gtkpod libreoffice libreoffice-gnome evolution evolution-exchange ooo-thumbnailer bleachbit clamtk nautilus-clamscan tuxmath tuxpaint tuxpuck tuxtype pingus accerciser python-dogtail audacious paman paprefs padevchooser abiword gnumeric sox automake intltool gnome-common exactimage tuxguitar solfege gperiodic gtkdiskfree thoggen speedy-ocr pandoc markup-binder ttf-aenigma gwrite gshutdown devede bum fluxbox fluxconf fbdesk fbpager xaralx photoprint 

fi

# Install non-free packages - non-distributable in some countries

echo
bell
red
echo -n "Do you want to install all of the non-free packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then  

echo
blue
echo "Installing non-free packages..."
green
echo

sudo apt-get install -y -q --force-yes ubuntu-restricted-extras libdvdcss2 non-free-codecs acroread
fi

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 4 - Configure Desktop and Keybindings

# Run the set_vinux_globals script

echo
blue
echo "Configuring desktop and keybindings..."
green
echo

sudo set_vinux_globals
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 5 - Configure Speech

# Run the restorespeech script

echo
blue
echo "Configuring speech..."
green
echo

sudo restorespeech

echo
bell
blue
echo "Done!  Reboot and enjoy your new Vinux-like environment."
echo "Note: if you were using script to log output type exit before rebooting."
echo

echo
bell
red
echo "Press any key to exit..."
read
reset
