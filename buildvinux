#!/bin/bash
#
# This script should only be run after completing the following steps:
#
# 1. Download the latest Ubuntu Precise iso and burn it to CD.
# 2. Wait to hear the drums, push Control + S and wait for speech to start.
# 3. Run the Ubuntu Installer, install the system to hard drive then reboot.
#
# Type 'sudo buildvinux' to run the script, when it is finished reboot and
# your system should be identical to the Vinux/Lucid distribution. If you 
# want a log of the build process run the 'script' command first and 'exit'
# when finished - the log will be in a file called 'typescript'.. 
# 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

# Stage 0 - Declare text colour/system bell functions

function black {
    tput setf 0   
}

function green {
    tput setf 2    
}

function blue {
    tput setf 3
}

function red {
    tput setf 4    
}

function white {
    tput setf 7
}

function reset {
    tput reset
}

function bell {
    echo -en "\007"    
}


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 1 - Configuring Repositories

echo
blue
echo "Adding personal package archives"
green
echo
sudo apt-add-repository ppa:vinux/vinux-precise-proposed
sudo apt-add-repository ppa:vinux/vinux-precise

# Add remastersys
sudo wget -O - http://www.remastersys.com/ubuntu/remastersys.gpg.key | apt-key add -
sudo echo '#Remastersys Precise
deb http://www.remastersys.com/ubuntu precise main' > /etc/apt/sources.list.d/remastersys-precise.list

echo -n "Do you want to remove LibreOffice? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then  

echo
blue
echo "Removing Libre Office..."
green
echo

sudo apt-get purge -y -qq libreoffice-*
 
fi

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 2 - Install Default Packages and upgrade

echo
sudo apt-get update -qq

# Install the default packages

echo
blue
echo "Installing default packages..."
green
echo

# Define packages

system_tools='remastersys remastersys-gui gparted acpi ubiquity-frontend-gtk aptitude aptoncd wajig ntp pastebinit vinux-compiz-settings vinux-default-settings vinux-desktop vinux-desktop-settings vinux-keyboard-shortcuts vinux-keyring vinux-user-configs vinux-wallpapers'

screen_readers='gnome-orca speakup-tools speechd-up'

accessibility_tools='nautilus-gksu monitor-toggle orca-teacher'

themes='gnome-accessibility-themes-extras gnome-themes gnome-themes-extras'

chat='pidgin pidgin-data pidgin-facebookchat pidgin-microblog irssi mangler'

graphics='nautilus-wallpaper gcolor2 nautilus-image-converter'

cli='mc vlock lfm lynx-cur alpine ttytter emacspeak'

sound='nautilus-script-audio-convert soundConverter      audiobook-converter pavucontrol sound-juicer'

convenient_tools='nautilus-open-terminal gedit-plugins geditpdf'

common='pcmanfm thunderbird easystroke gnome-mousetrap'

sudo apt-get install -y -q --force-yes $system_tools $screen_readers $accessibility_tools $themes $chat $graphics $cli $sound $convenient_tools $common


sudo apt-get upgrade -y  -qq

# Fix bug - espeak gives error: bt_audio_service_open: connect() failed: 

echo
blue
echo "Removing bluez-alsa..."
green
echo

sudo apt-get purge -qq -y bluez-alsa 

# Clean up any packages we don't need

echo
blue
echo "Removing unnecessary packages..."
green
echo

sudo apt-get autoremove -y -qq

# Switch off automatic updates notification message

sudo sed -i 's/APT::Periodic::Update-Package-Lists "1";/APT::Periodic::Update-Package-Lists "0";/' /etc/apt/apt.conf.d/10periodic

# Open emacspeak in customizable mode

sudo sed -i 's/exec emacs -q -l/exec emacs -l/' /usr/bin/emacspeak

# install our irssi configuration
sudo cp system/irssi.conf /etc/irssi.conf


# Stage 3 - Install/Remove Optional Packages

# Install all of the DVD Packages

echo
bell
red
echo -n "Do you want to install all of the extra DVD packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then   

echo
blue
echo "Installing DVD packages..."
green
echo
sudo apt-get install -y --force-yes -q gimp inkscape scribus openclipart-png transmageddon cheese audacity jokosher gtkpod libreoffice libreoffice-gnome evolution evolution-exchange ooo-thumbnailer clamtk nautilus-clamscan audacious paman paprefs thoggen speedy-ocr ttf-aenigma devede photoprint 

fi

# Stage 4 - Configure Desktop and Keybindings

# Run the set_vinux_globals script

echo
blue
echo "Configuring desktop and keybindings..."
green
echo

sudo set_vinux_globals
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 5 - Configure Speech

# Run the restorespeech script

echo
blue
echo "Configuring speech..."
green
echo

sudo restorespeech

echo
bell
blue
echo "Done!  Reboot and enjoy your new Vinux-like environment."
echo "Note: if you were using script to log output type exit before rebooting."
echo

echo
bell
red
echo "Press any key to exit..."
read
reset
