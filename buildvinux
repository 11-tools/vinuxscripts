#!/bin/bash
#
# This script should only be run after completing the following steps:
#
# 1. Download the latest Ubuntu Lucid iso and burn it to CD.
#
# 2. Boot from the CD, Press Space, Enter, F5, select 'screen-reader' and 
# Enter again to boot the live CD.
#
# 3. Run the Ubuntu Installer, install the system to hard drive then reboot.
#
# Type 'sudo buildvinux' to run the script, when it is finished reboot and
# your system should be identical to the Vinux/Lucid distribution. If you 
# want a log of the build process run the 'script' command first and 'exit'
# when finished - the log will be in a file called 'typescript'.. 
# 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

# Stage 0 - Declare text colour/system bell functions

function black {
    tput setf 0   
}

function green {
    tput setf 2    
}

function blue {
    tput setf 3
}

function red {
    tput setf 4    
}

function white {
    tput setf 7
}

function reset {
    tput reset
}

function bell {
    echo -en "\007"    
}


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 1 - Configuring Repositories

# Update /etc/apt/sources.list

echo
blue
echo "Updating software repositories..."
green
echo

sudo apt-add-repository ppa:mangler/mangler
egrep -v 'vinux' /etc/apt/sources.list > /tmp/vinux.tmp
echo '# Repositories supporting vinux packages.
# If you are willing to help test new Vinux packages, uncomment the following:
#deb http://ppa.launchpad.net/vinux/vinux-lucid-testing/ubuntu lucid main
#deb-src http://ppa.launchpad.net/vinux/vinux-lucid-testing/ubuntu lucid main
deb http://www.geekconnection.org/remastersys/repository karmic/
deb http://ppa.launchpad.net/vinux/vinux-lucid/ubuntu lucid main
deb-src http://ppa.launchpad.net/vinux/vinux-lucid/ubuntu lucid main' >> /tmp/vinux.tmp
sed -i 's/^# *deb\(.*\) partner *$/deb\1 partner/
    s/^# *deb\(.*\)backports\(.*\)$/deb\1backports\2/' /tmp/vinux.tmp
sudo mv /tmp/vinux.tmp /etc/apt/sources.list

# Add medibuntu repository - uncommented it since it seems to be up again

echo
blue
echo "Adding medibuntu repository..."
green
echo

sudo wget --output-document=/etc/apt/sources.list.d/medibuntu.list http://www.medibuntu.org/sources.list.d/$(lsb_release -cs).list && sudo apt-get --quiet update && sudo apt-get --yes --quiet --allow-unauthenticated install medibuntu-keyring && sudo apt-get --quiet update 

sudo apt-get -y --force-yes install app-install-data-medibuntu apport-hooks-medibuntu 

# Pin the priority of Vinux packages as higher than Ubuntu, so they don't get
# updated until we say so.

echo
blue
echo "Pinning Vinux repositories..."
green
echo

echo 'Package: *
Pin: release o=LP-PPA-vinux-vinux-lucid
Pin-Priority: 750' > /tmp/vinux-lucid-pin-750
sudo mv /tmp/vinux-lucid-pin-750 /etc/apt/preferences.d
echo 'Package: *
Pin: release o=LP-PPA-vinux-vinux-lucid-testing
Pin-Priority: 760' > /etc/apt/preferences.d/vinux-lucid-testing-pin-760

# Import the Vinux/Ubuntu Team repository key.

echo
blue
echo "Importing repository keys..."
green
echo

sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EF2AFDCF

# Import the Extras key
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 16126D3A3E5C1192 

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 2 - Install Default Packages

# Update to the latest packages.

echo
blue
echo "Updating package list..."
green
echo

sudo apt-get update 

echo
blue
echo "Upgrading all packages... This can take a few minutes."
green
echo

sudo apt-get upgrade -y 

# Install the default packages

echo
blue
echo "Installing default packages..."
green
echo

sudo apt-get install -y --force-yes gnome-orca gparted compizconfig-settings-manager acpi ubiquity-frontend-gtk vlock irssi lfm aptitude lynx-cur pdmenu sysv-rc-conf testdisk deborphan pcmanfm alpine nautilus-open-terminal nautilus-gksu nautilus-image-converter nautilus-script-audio-convert nautilus-wallpaper gedit-plugins  gnome-accessibility-themes-extras gnome-themes gnome-themes-extras gnome-themes-more thunderbird soundConverter startupmanager pybackpack gespeaker mangler remastersys speechd-up speakup-tools bareftp gwget aptoncd isomaster gtk-recordmydesktop gnome-color-chooser ceni geditpdf monitor-toggle sonic ttytter pavucontrol conkeror gnome-specimen gcolor2 bluefish pidgin pidgin-data pidgin-facebookchat pidgin-hotkeys pidgin-libnotify pidgin-microblog pidgin-plugin-pack pidgin-skype gtkhash tuxcmd  gworldclock sound-juicer mhwaveedit autokey-gtk gtk-chtheme fslint parcellite alarm-clock dlume gtodo terminator gufw gnome-schedule hardinfo searchmonkey file-browser-applet meld partimage ntp dasher easystroke gnome-mousetrap gxneur gok surfraw audiobook-converter wajig wordgrinder emacspeak

# Install x-tile from repository

echo
blue
echo "installing x-tile..."
green
echo

sudo wget http://www.giuspen.com/software/x-tile_1.8.3-1_all.deb
sudo dpkg -i x-tile_1.8.3-1_all.deb

# Fix bug - espeak gives error: bt_audio_service_open: connect() failed: 

echo
blue
echo "Removing bluez-alsa..."
green
echo

sudo apt-get purge -y bluez-alsa 

# Install gnome-app-install

echo
blue
echo "Installing gnome-app-install..."
green
echo

sudo apt-get install -y --force-yes gnome-app-install 

# Clean up any packages we don't need

echo
blue
echo "Removing unnecessary packages..."
green
echo

sudo apt-get -y autoremove 

# Switch off automatic updates notification message

sed -i 's/APT::Periodic::Update-Package-Lists "1";/APT::Periodic::Update-Package-Lists "0";/' /etc/apt/apt.conf.d/10periodic

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 3 - Install Optional Packages

# Install all of the DVD Packages

echo
bell
red
echo -n "Do you want to install all of the extra DVD packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then   

echo
blue
echo "Installing DVD packages..."
green
echo

sudo apt-get install -y --force-yes cuneiform ocropus gambas2 uck screenlets gdesklets google-gadgets-gtk prism-google-groups prism-google-mail chromium-browser prism-google-calendar prism-google-docs gimp inkscape scribus openclipart-png transmageddon cheese audacity jokosher gtkpod openoffice.org openoffice.org-gnome evolution evolution-exchange ooo-thumbnailer bleachbit clamtk gufw nautilus-clamscan spamassassin qemu-launcher virtualbox-ose extremetuxracer supertux tuxmath tuxpaint tuxpuck tuxtype supertuxkart pingus accerciser python-dogtail audacious pavucontrol paman paprefs padevchooser abiword gnumeric sox automake intltool gnome-common exactimage tuxguitar twitux solfege gperiodic gtkdiskfree thoggen speedy-ocr pandoc markup-binder ttf-aenigma gwrite gshutdown devede bum fluxbox fluxconf fbdesk fbpager bbtime bbrun xaralx photoprint icc-profiles  
fi

# Install some 3D Games - not accessible with screen-reader

echo
bell
red
echo -n "Do you want to install the 3D games packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then 

echo
blue 
echo "Installing games packages..."
green
echo

sudo apt-get install -y --force-yes assaultcube wesnoth brutalchess foobillard glest neverball neverputt oolite pokerth smc smc-music stormbaancoureur torcs trigger warzone2100 yofrankie celestia-gnome stellarium marble
fi

# Install non-free packages - non-distributable

echo
bell
red
echo -n "Do you want to install all of the non-free packages? [y/n]: "; read ANSWER
green
echo

if [ "$ANSWER" = "y" ]; then  

echo
blue
echo "Installing non-free packages..."
green
echo

sudo apt-get install -y --force-yes ubuntu-restricted-extras libdvdcss2 non-free-codecs skype acroread acroread-fonts 
fi

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 4 - Configure Desktop and Keybindings

# Run the set_vinux_globals script

echo
blue
echo "Configuring desktop and keybindings..."
green
echo

sudo /usr/bin/set_vinux_globals

if [ "$COPY" = "yes" ]; then

# Copy files from /etc/skel to user directory
cp -r /etc/skel/.config ~
cp -r /etc/skel/.gconf ~
cp -r /etc/skel/.mangler ~
cp -r /etc/skel/.orca ~
cp /etc/skel/.gtkrc* ~
cp /etc/skel/.bash_aliases_vinux ~

sudo cp /etc/skel/irssi.conf /etc
sudo cp /etc/skel/.bash_aliases_vinux /root

fi

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Stage 5 - Configure Speech

# Run the restorespeech script

echo
blue
echo "Configuring speech..."
green
echo

sudo /usr/bin/restorespeech

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

echo
bell
blue
echo "Done!  Reboot and enjoy your new Vinux-like environment."
echo "Please report bugs to vinux-development@googlegroups.com"
echo

echo
bell
red
echo "Press any key to exit..."
read
reset
