#!/bin/bash
# This script sets Vinux keybindings, menus and such.  It also modifies the desktop, but it
# doesn't remove any applications.  It should be run as root.

LOGFILE=/dev/null
ZIPCODE=""
INSTALL_VINUX_DESKTOP="yes"
while [ $# -gt 0 ]; do
    if [ $1 = "-l" ]; then
        shift
        if [ $# -lt 1 ]; then
    	    echo "Expecting log file name"
    	    exit 1
        fi
        LOGFILE=$1
    elif [ $1 = "-z" ]; then
        shift
        if [ $# -lt 1 ]; then
    	    echo "Expecting zipcode"
    	    exit 1
        fi
        ZIPCODE=$1
    elif [ $1 = "-d" ]; then
	INSTALL_VINUX_DESKTOP="no"
    else
        echo "Unknown option $1"
        echo "Usage: restore_vinux_environment [-z zipcode] [-g] [-d] [-l logFile]"
	echo "    -d  : Don't modify the Ubuntu desktop panels and background"
        exit 1
    fi
    shift
done

if [ "$ZIPCODE" = "" ]; then
    echo "Please enter your zipcode for Stormdragon's weather reporting using Orca+w"
    read ZIPCODE
fi

# Change menus to use runsu instead of gksu
echo "Updating main menu"
cp -r vinux_data/menus/* /usr/share/applications
chmod -R a+r /usr/share/applications
# Force the menus cache to be rebuilt - it happens next time a package is installed with a menu
rm -f /usr/share/applications/desktop.*.cache

# Set Vinux keybindings
echo "Setting Vinux keybindings"

function gct {
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults $*
}

function set-string {
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string "$1" "$2"
}

set-string /apps/gnome_settings_daemon/keybindings/volume_mute '<Shift><Control>m'
set-string /apps/gnome_settings_daemon/keybindings/search '<Shift><Control>s'
set-string /apps/gnome_settings_daemon/keybindings/home '<Shift><Control>h'
set-string /apps/gnome_settings_daemon/keybindings/www '<Shift><Control>w'
set-string /apps/gnome_settings_daemon/keybindings/email '<Shift><Control>e'
set-string /apps/gnome_settings_daemon/keybindings/calculator '<Shift><Control>l'
set-string /apps/gnome_settings_daemon/keybindings/volume_up '<Shift><Control>Up'
set-string /apps/gnome_settings_daemon/keybindings/volume_down '<Shift><Control>Down'
set-string /apps/metacity/global_keybindings/run_command_terminal '<Shift><Control>t'
set-string /apps/metacity/window_keybindings/maximize_horizontally '<Shift><Control>z'
set-string /apps/metacity/window_keybindings/maximize_vertically '<Shift><Control>a'
set-string /apps/metacity/window_keybindings/toggle_maximized '<Shift><Control>x'
set-string /apps/metacity/window_keybindings/toggle_fullscreen '<Shift><Control>f'

# takes custom key number, name, binding, and action in that order
function add-customkey {
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /desktop/gnome/keybindings/custom$1/action "$4"
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /desktop/gnome/keybindings/custom$1/name "$2"
    gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults -s -t string /desktop/gnome/keybindings/custom$1/binding "$3"
}

add-customkey 0 'Orca Restart' '<Shift><Control>o' 'sh -c "killall speech-dispatcher; orca --replace"'
add-customkey 1 'Gedit' '<Shift><Control>g' 'gedit'
add-customkey 2 'Rhythmbox' '<Shift><Control>r' 'rhythmbox'
add-customkey 3 'Dictionary' '<Shift><Control>d' 'gnome-dictionary'
add-customkey 4 'Brasero' '<Shift><Control>b' 'brasero'
add-customkey 5 'Metacity' '<Shift><Control>F2' 'metacity --replace'
add-customkey 6	'Compiz' '<Shift><Control>F3' 'compiz --replace'
add-customkey 7	'Root Nautilus' '<Shift><Control>n' 'runsu nautilus'
add-customkey 8	'YASR' '<Shift><Control>y' 'gnome-terminal -e yasr'
add-customkey 9 'Keybindings' '<Shift><Control>k' 'gedit /usr/share/doc/vinux/keybindings.txt'

# Compiz
set-string /apps/compiz/plugins/ezoom/allscreens/options/zoom_in_button '<Super><Button1>'
set-string /apps/compiz/plugins/ezoom/allscreens/options/zoom_out_button '<Super><Button3>'
set-string /apps/compiz/plugins/ezoom/allscreens/options/zoom_specific_1_key '<Super>1'
set-string /apps/compiz/plugins/ezoom/allscreens/options/zoom_specific_2_key '<Super>2'
set-string /apps/compiz/plugins/ezoom/allscreens/options/zoom_specific_3_key '<Super>3'
set-string /apps/compiz/plugins/ezoom/allscreens/options/lock_zoom_key '<Super>l'
set-string /apps/compiz/plugins/ezoom/allscreens/options/pan_left_key '<Super>Left'
set-string /apps/compiz/plugins/ezoom/allscreens/options/pan_right_key '<Super>Right'
set-string /apps/compiz/plugins/ezoom/allscreens/options/pan_up_key '<Super>Up'
set-string /apps/compiz/plugins/ezoom/allscreens/options/pan_down_key '<Super>Down'
set-string /apps/compiz/plugins/ezoom/allscreens/options/fit_to_zoom_key '<Super>r'
set-string /apps/compiz/plugins/ezoom/allscreens/options/fit_to_window_key '<Super>z'
gct -s -t bool /apps/compiz/plugins/ezoom/screen0/options/hide_original_mouse true
gct -s -t bool /apps/compiz/plugins/ezoom/screen0/options/scale_mouse true
set-string /apps/compiz/plugins/neg/allscreens/options/screen_toggle_key '<Super>s'
set-string /apps/compiz/plugins/mag/allscreens/options/zoom_in_button '<Shift><Super>Button1'
set-string /apps/compiz/plugins/mag/allscreens/options/zoom_out_button '<Shift><Super>Button3'
gct -s -t int /apps/compiz/plugins/ezoom/screen0/options/box_width 640
gct -s -t int /apps/compiz/plugins/ezoom/screen0/options/box_height 480
set-string /apps/compiz/plugins/obs/allscreens/options/brightness_increase_key '<Super>b'
set-string /apps/compiz/plugins/obs/allscreens/options/brightness_decrease_key '<Super>v'
set-string /apps/compiz/plugins/obs/allscreens/options/saturation_increase_key '<Super>t'
set-string /apps/compiz/plugins/obs/allscreens/options/saturation_decrease_key '<Super>y'
set-string /apps/compiz/plugins/switcher/allscreens/options/next_all_key 'Disabled'
set-string /apps/compiz/plugins/switcher/allscreens/options/next_panel_key '<Control><Alt><Tab>'
set-string /apps/compiz/plugins/switcher/allscreens/options/prev_all_key 'Disabled'
set-string /apps/compiz/plugins/switcher/allscreens/options/prev_panel_key '<Shift><Control><Alt><Tab>'

# Set active plugins
gct -s -t list --list-type string /apps/compiz/general/allscreens/options/active_plugins '[core,mousepoll,neg,place,vpswitch,session,resize,gnomecompat,regex,commands,imgjpeg,png,svg,dbus,workarounds,decoration,text,mag,animation,resizeinfo,wall,expo,snap,fade,ezoom,move,scale,opacify,switcher,scaleaddon]'

# Enable Orca
gct -s -t bool /desktop/gnome/interface/accessibility true
gct -s -t bool /apps/gksu/disable-grab true
set-string /desktop/gnome/applications/window_manager/default /usr/bin/metacity
gct -s -t bool /desktop/gnome/applications/at/visual/startup true
set-string /desktop/gnome/applications/at/visual/exec orca
set-string /apps/empathy/conversation/theme classic

#gct_gdm -s -t bool /desktop/gnome/interface/accessibility true
#gct_gdm -s -t bool /desktop/gnome/applications/at/visual/startup true
#gct_gdm -s -t string /desktop/gnome/applications/at/visual/exec orca 
#gct_gdm -s -t bool /desktop/gnome/applications/at/screen_reader_enabled true
gct -s -t bool /desktop/gnome/applications/at/screen_reader_enabled true

if [ "$INSTALL_VINUX_DESKTOP" = "yes" ]; then
# Set fonts
set-string /desktop/gnome/interface/monospace_font_name 'Monospace Bold 14'
set-string /desktop/gnome/interface/document_font_name 'Sans Bold 14'
set-string /desktop/gnome/interface/font_name 'Sans Bold 14'
set-string /desktop/gnome/interface/icon_theme 'Humanity-Dark'
set-string /desktop/gnome/interface/gtk_theme 'New Wave'

# Set mouse pointer
gct -s -t int /desktop/gnome/peripherals/mouse/cursor_size 48
set-string /desktop/gnome/peripherals/mouse/cursor_theme 'DMZ-White'
gct -s -t int /apps/compiz/general/allscreens/options/cursor_size 48
set-string /apps/compiz/general/allscreens/options/cursor_theme 'DMZ-White'

# Update /etc/skel and /var/lib/gdm
rsync -r vinux_data/skel/ /etc/skel
if [ "$ZIPCODE" != "" ]; then
    sed -i 's/zipCode = "[0-9]*"/zipCode = "'$ZIPCODE'"/' /etc/skel/.orca/orca-customizations.py
fi
cp -r /etc/skel/.orca /var/lib/gdm
chmod -R a+r /etc/skel
chown -R gdm.gdm /var/lib/gdm/.orca
cp -r vinux_data/EasyInstall /usr/share
chmod -R a+rx /usr/share/EasyInstall
fi

remove_applet()
{
    local line_no prior_line next_line

    line_no=$(grep -n "<string>$1</string>" /usr/share/gconf/defaults/05_panel-default-setup.entries | cut -f 1 -d :)
    [ "$line_no" ] || return
    prior_line=$((line_no-1))
    next_line=$((line_no+1))
    sed -i -n "${prior_line},${next_line}!p" /usr/share/gconf/defaults/05_panel-default-setup.entries
    update-gconf-defaults
}

if [ "$INSTALL_VINUX_DESKTOP" = "yes" ]; then
    remove_applet fast_user_switch
fi

sed -i -e 's/# Host alias specification/Defaults\tenv_keep = "ORBIT_SOCKETDIR XDG_SESSION_COOKIE GTK_MODULES"\n\n# Host alias specification/g' /etc/sudoers
update_grub
